node(AGENT){
    def server = Artifactory.newServer url: SERVER_URL, credentialsId: ART
    def rtMaven = Artifactory.newMavenBuild()
    
    stage 'Build'
   git credentialsId: '6be6c9a2-0e1a-4454-b73a-3e06b950c627', url: 'ssh://git@git.jfrog.info:7999/artifactory/artifactory.git'



    stage 'Artifactory configuration'
        rtMaven.tool = 'M3' // Tool name from Jenkins configuration
        rtMaven.deployer releaseRepo:'libs-release-local', snapshotRepo:'libs-snapshot-local', server: server
        rtMaven.resolver releaseRepo:'libs-release', snapshotRepo:'libs-snapshot', server: server
        def buildInfo = Artifactory.newBuildInfo()
        buildInfo.retention maxBuilds: 10
    stage 'Exec Maven'
        rtMaven.run pom: 'devenv/pom.xml', goals: 'clean install -Prelease -DskipTests', buildInfo: buildInfo

    stage 'Publish build info'
        server.publishBuildInfo buildInfo
        
        
    stage 'Xray scan'
    def xrayConfig = [
        //Mandatory parameters
        'buildName'         : buildInfo.name,
        'buildNumber'       : buildInfo.number,

        //Optional
        'failBuild'        :false //Default
    ]

    // Scan xray build
    def xrayResults = server.xrayScan xrayConfig
    // Print full report from xray
    echo xrayResults as String
}      
